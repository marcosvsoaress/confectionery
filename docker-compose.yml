version: "3.7"
services:
  app:
    build:
      args:
        user: user
        uid: 1000
      context: ./docker/php/
      dockerfile: Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www/
    networks:
      - app-network

  db:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      - db-volume:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-db
    ports:
      - 8016:80
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
    networks:
      - app-network

  nginx_proxy:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
        - 1025:1025
        - 8025:8025
    networks:
        - app-network

networks:
  app-network:
    driver: bridge

volumes:
    db-volume:
